<Page
    x:Class="FriskyMouse.Views.Pages.RippleEffectPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:colorpicker="clr-namespace:ColorPicker;assembly=ColorPicker"
    xmlns:controls="clr-namespace:FriskyMouse.Views.Controls"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:FriskyMouse.Views.Pages"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:sys="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    Title="Left Click Indicator"
    d:DataContext="{d:DesignInstance local:RippleEffectPage,
                                     IsDesignTimeCreatable=False}"
    d:DesignHeight="1000"
    d:DesignWidth="800"
    ui:Design.Background="{DynamicResource ApplicationBackgroundBrush}"
    ui:Design.Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    Foreground="{DynamicResource TextFillColorPrimaryBrush}"
    ScrollViewer.CanContentScroll="False"
    mc:Ignorable="d">


    <controls:FeaturePageContentControl
        FeatureDescription="Mouse Clicks Indicator"
        FeatureTitle="Mouse Click Decorator"
        Icon="{ui:SymbolIcon CursorClick24}">

        <controls:SimpleStackPanel Width="Auto" Spacing="10">
            <StackPanel>
                <ui:TextBlock
                    Margin="0,0,0,10"
                    FontSize="14"
                    FontTypography="Body"
                    Foreground="{ui:ThemeResource TextFillColorPrimaryBrush}"
                    Text="Select a mouse button for which click effects will be applied"
                    TextWrapping="WrapWithOverflow" />

                <StackPanel Orientation="Horizontal">
                    <ui:CardAction
                        Command="{Binding ViewModel.CardOptionsClickCommand}"
                        CommandParameter="left_button"
                        Icon="{ui:SymbolIcon ShoppingBagArrowLeft24,
                                             FontSize=43,
                                             Filled=False}"
                        Style="{Binding ViewModel.IsLeftButtonCurrent, Converter={StaticResource BooleanToMouseButtonStyleConverter}, Mode=TwoWay}">
                        <StackPanel>
                            <ui:TextBlock
                                FontTypography="BodyStrong"
                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                Text="Left Click"
                                TextWrapping="WrapWithOverflow" />
                        </StackPanel>
                    </ui:CardAction>
                    <ui:CardAction
                        Margin="30,0,0,0"
                        Command="{Binding ViewModel.CardOptionsClickCommand}"
                        CommandParameter="right_button"
                        Icon="{ui:SymbolIcon ShoppingBagPlay24,
                                             FontSize=143,
                                             Filled=False}"
                        Style="{Binding ViewModel.IsRightButtonCurrent, Converter={StaticResource BooleanToMouseButtonStyleConverter}, Mode=TwoWay}">
                        <StackPanel>
                            <ui:TextBlock
                                Margin="0"
                                FontTypography="BodyStrong"
                                Foreground="{DynamicResource TextFillColorPrimaryBrush}"
                                Text="Right Click"
                                TextWrapping="WrapWithOverflow" />
                        </StackPanel>
                    </ui:CardAction>
                </StackPanel>
            </StackPanel>

            <!--
            TODO: convert to text
            <controls:HotkeysVisualControl Hotkeys="{Binding ViewModel.Hotkeys}" />-->
            <!--  Edit activation shortcut  -->
            <controls:SettingsCard
                Margin="0,2,0,0"
                Padding="14,10,10,5"
                Description="Change the activation shortcut"
                Header="Activation shortcut"
                Icon="{ui:SymbolIcon KeyboardMouse16}">

                <StackPanel Margin="0,0,25,0" Orientation="Horizontal">
                    <ui:Card
                        Margin="0,0,5,0"
                        Padding="10"
                        HorizontalAlignment="Left"
                        VerticalContentAlignment="Center">
                        <ui:TextBlock
                            Margin="0,0,0,0"
                            VerticalAlignment="Center"
                            FontTypography="BodyStrong"
                            Text="{Binding ViewModel.CurrentHotkeyText, Mode=OneWay}" />
                        <!--  put here a preview of the current shortcut  -->
                    </ui:Card>
                    <ui:Button
                        Grid.Column="1"
                        Height="37"
                        Margin="0,0,0,0"
                        Command="{Binding ViewModel.OpenShortcutDialogCommand, Mode=OneWay}"
                        Content="Edit"
                        Icon="{ui:SymbolIcon Edit24}" />
                </StackPanel>

                <!--  Replace this with an activation shortcut  -->
                <!--<ui:ToggleSwitch
        Margin="0,0,20,0"
        IsChecked="{Binding ViewModel.IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
        OffContent="Off"
        OnContent="On" />-->
            </controls:SettingsCard>

            <controls:ExpandableSettingsControl
                Margin="0,0,0,0"
                Description="{Binding ViewModel.SwitchDescriptionText}"
                Header="{Binding ViewModel.SwitchHeaderText}"
                HeaderContentPadding="0,0,0,0"
                Icon="{ui:SymbolIcon CursorClick24}"
                IsExpanded="True">
                <controls:ExpandableSettingsControl.ExpanderAction>
                    <ui:ToggleSwitch
                        IsChecked="{Binding ViewModel.IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        OffContent="Off"
                        OnContent="On" />
                </controls:ExpandableSettingsControl.ExpanderAction>

                <!--<controls:SettingsCard
                    Margin="0,20,0,0"
                    Description="{Binding ViewModel.SwitchDescriptionText}"
                    Header="{Binding ViewModel.SwitchHeaderText}"
                    Icon="{ui:SymbolIcon CursorClick24}">
                    <ui:Tog gleSwitch
                        IsChecked="{Binding ViewModel.IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        OffContent="Off"
                        OnContent="On" />
                </controls:SettingsCard>-->

                <!--  Ripple options  -->
                <Grid HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <!--  Shadow options  -->
                    <!--<controls:SettingsGroupHeaderControl
                    Grid.Column="0"
                    Description="FIXME"
                    Header="Click indicator options">-->
                    <StackPanel>
                        <controls:SettingsCard
                            Description="Select the shape or drawing you want to use as click indicator"
                            Header="Ripple drawing profile"
                            Icon="{ui:SymbolIcon DataSunburst24}"
                            Style="{StaticResource SettingsCardExpanderItemStyle}">
                            <ComboBox
                                x:Name="RippleProfiles"
                                MinWidth="200"
                                HorizontalAlignment="Left"
                                ItemsSource="{Binding ViewModel.RippleProfiles, Mode=OneWay}"
                                ScrollViewer.VerticalScrollBarVisibility="Visible"
                                SelectedIndex="{Binding ViewModel.SelectedRippleProfile, Mode=TwoWay}" />

                        </controls:SettingsCard>

                        <controls:SettingsCard
                            Description="Select the color to be applied while rendering the ripple profile"
                            Header="Ripple color"
                            Icon="{ui:SymbolIcon ColorBackground24}"
                            Style="{StaticResource SettingsCardExpanderItemStyle}">
                            <controls:ColorPickerControl SelectedColor="{Binding ViewModel.FillColor, Mode=TwoWay}" />
                            <!--<ui:Card Width="90" Padding="5">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                    </Grid.ColumnDefinitions>
                                    <colorpicker:PortableColorPicker
                                        Width="60"
                                        Height="35"
                                        Padding="2,2,5,2"
                                        AllowDrop="True"
                                        HintColor="Red"
                                        SelectedColor="{Binding ViewModel.FillColor, Mode=TwoWay}"
                                        ShowAlpha="False"
                                        ShowFractionalPart="False"
                                        SmallChange="5"
                                        Style="{DynamicResource DefaultColorPickerStyle}"
                                        UseHintColor="True" />
                                    <ui:SymbolIcon
                                        Grid.Column="2"
                                        Margin="5,0,0,0"
                                        Symbol="ChevronDown48" />
                                </Grid>
                            </ui:Card>-->
                        </controls:SettingsCard>

                        <controls:SettingsCard
                            Description="Adjust the maximum value of the ripple's radius"
                            Header="Radius (%)"
                            Icon="{ui:SymbolIcon TargetEdit20}"
                            Style="{StaticResource SettingsCardExpanderItemStyle}">

                            <StackPanel Orientation="Horizontal">
                                <Slider
                                    x:Name="RippleRadius"
                                    Width="200"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    AutoToolTipPlacement="TopLeft"
                                    Maximum="25"
                                    Minimum="5"
                                    SmallChange="1"
                                    Value="{Binding ViewModel.RadiusMultiplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <ui:TextBlock Style="{StaticResource OutputTextBlockStyle}" Text="{Binding Value, ElementName=RippleRadius, Mode=OneWay}" />
                            </StackPanel>

                            <!--<Slider
                    x:Name="RippleRadius"
                    Width="200"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Center"
                    AutoToolTipPlacement="TopLeft"
                    Maximum="100"
                    Minimum="0"
                    Value="{Binding ViewModel.RadiusMultiplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />-->
                        </controls:SettingsCard>

                        <controls:SettingsCard
                            Description="Adjust the rate at which the ripple's color will fade"
                            Header="Fading opacity (%)"
                            Icon="{ui:SymbolIcon LightbulbPerson24}"
                            Style="{StaticResource SettingsCardExpanderItemStyle}">
                            <StackPanel Orientation="Horizontal">
                                <Slider
                                    x:Name="RippleFadingOpacity"
                                    Width="200"
                                    HorizontalAlignment="Left"
                                    VerticalAlignment="Center"
                                    AutoToolTipPlacement="TopLeft"
                                    Maximum="95"
                                    Minimum="1"
                                    Value="{Binding ViewModel.OpacityMultiplier, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                                <TextBlock Style="{StaticResource OutputTextBlockStyle}" Text="{Binding Value, ElementName=RippleFadingOpacity, Mode=OneWay}" />
                            </StackPanel>
                        </controls:SettingsCard>

                        <controls:SettingsCard
                            Description="When enabled, the ripple's color will fade gradually while being animated"
                            Header="Enable ripple color fading"
                            Icon="{ui:SymbolIcon RadarCheckmark20}"
                            Style="{StaticResource SettingsCardExpanderItemStyle}">
                            <ui:ToggleSwitch
                                IsChecked="{Binding ViewModel.CanFadeColor, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                OffContent="Off"
                                OnContent="On" />
                        </controls:SettingsCard>
                    </StackPanel>
                    <!--</controls:SettingsGroupHeaderControl>-->
                </Grid>

            </controls:ExpandableSettingsControl>

            <controls:ExpandableSettingsControl
                Margin="0,10,0,0"
                Description="Customize the speed, direction, and easing functions of the ripple's animation"
                Header="Ripple Animation Options"
                HeaderContentPadding="0,0,0,0"
                Icon="{ui:SymbolIcon MoviesAndTv24}"
                IsExpanded="True">


                <Grid HorizontalAlignment="Stretch">
                    <Grid.RowDefinitions>
                        <RowDefinition />
                        <RowDefinition />
                        <RowDefinition />
                    </Grid.RowDefinitions>
                    <controls:SettingsCard
                        CanReposition="False"
                        Description="Adjust the speed of the animation to your liking."
                        Header="Animation speed"
                        Icon="{ui:SymbolIcon TopSpeed24}"
                        Style="{StaticResource SettingsCardExpanderItemStyle}">
                        <StackPanel Orientation="Horizontal">
                            <Slider
                                x:Name="AnimationSpeed"
                                Width="200"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                AutoToolTipPlacement="TopLeft"
                                Maximum="50"
                                Minimum="10"
                                SmallChange="1"
                                Value="{Binding ViewModel.AnimationSpeed, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <TextBlock Style="{StaticResource OutputTextBlockStyle}" Text="{Binding Value, ElementName=AnimationSpeed, Mode=OneWay}" />
                        </StackPanel>
                    </controls:SettingsCard>

                    <controls:SettingsCard
                        Grid.Row="1"
                        Description="Select a function to control the acceleration and deceleration of the ripples animation"
                        Header="Easing fucntions"
                        Icon="{ui:SymbolIcon DesignIdeas24}"
                        Style="{StaticResource SettingsCardExpanderItemStyle}">
                        <ComboBox
                            x:Name="InterpolationTypes"
                            MinWidth="200"
                            HorizontalAlignment="Left"
                            ItemsSource="{Binding ViewModel.EasingFunctions, Mode=OneWay}"
                            ScrollViewer.VerticalScrollBarVisibility="Visible"
                            SelectedIndex="{Binding ViewModel.SelectedInterpolator, Mode=TwoWay}" />
                    </controls:SettingsCard>

                    <controls:SettingsCard
                        Grid.Row="2"
                        Description="Specify whether you want the animation to progress inward, outward, or inward-outward"
                        Header="Direction"
                        Icon="{ui:SymbolIcon ArrowTurnBidirectionalDownRight24}"
                        Style="{StaticResource SettingsCardExpanderItemStyle}">
                        <ComboBox
                            x:Name="RippleAnimationDirections"
                            MinWidth="200"
                            HorizontalAlignment="Left"
                            ItemsSource="{Binding ViewModel.AnimationDirections, Mode=OneWay}"
                            SelectedIndex="{Binding ViewModel.SelectedAnimationDirection, Mode=TwoWay}" />
                    </controls:SettingsCard>

                </Grid>
            </controls:ExpandableSettingsControl>
        </controls:SimpleStackPanel>
    </controls:FeaturePageContentControl>

</Page>


